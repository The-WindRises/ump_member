apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.jakewharton.butterknife'
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "it.swiftelink.com.vcs_member"
        minSdkVersion rootProject.ext.minSdkVersionVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86'
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME: "it.swiftelink.com.vcs_member",
                JPUSH_APPKEY : "6a3c1548343704b39ae1f8cf", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]

    }


//  签名文件信息配置
    signingConfigs {
        config {
            storeFile file('../jks/vcs_member.jks')
            storePassword "123456"
            keyAlias "key0"
            keyPassword "123456"
            v2SigningEnabled false  //7.0系统签名的问题
        }
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            //开启代码混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

    lintOptions {
        //在打包Release版本的时候进行检测,可以打开，这样报错还会显示出来
        checkReleaseBuilds false
        //abortOnError一定要设为false，这样即使有报错也不会停止打包了
        abortOnError false
    }


    packagingOptions {       //避免重复导入库
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

    compileOptions {
        //使用java1.8 lambda
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    api project(':factory')
    api "androidx.appcompat:appcompat:$rootProject.ext.supportVersion"
    api 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.jaredrummler:material-spinner:1.3.1'
    //butterknife
    api "com.jakewharton:butterknife:$rootProject.ext.butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.ext.butterknifeVersion"
    //图片选择器
    api "com.yuyh.imgsel:library:$rootProject.ext.pictureSelectorVersion"
    implementation 'org.sufficientlysecure:html-textview:3.9'
    //权限申请
    implementation "org.permissionsdispatcher:permissionsdispatcher:$rootProject.ext.permissionsdispatcherVersion"
    annotationProcessor "org.permissionsdispatcher:permissionsdispatcher-processor:$rootProject.ext.permissionsdispatcherVersion"
    //视频sdk
    api(name: 'LiteAVSDK_TRTC_6.7.7754', ext: 'aar')
//    api "com.tencent.imsdk:tuikit:$rootProject.ext.imsdkVersion"
    //支付宝支付
    api(name: 'alipaySdk-15.5.7-20181023110917', ext: 'aar')
    //微信支付
    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.3.1'
    api 'com.github.xiaohaibin:XBanner:1.7.0'
    implementation files('libs/universal-image-loader-1.9.4.jar')

    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0'
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
//    // 基础依赖包，必须要依赖
//    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
//// fragment快速实现（可选）
//    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'
    implementation 'com.github.princekin-f:EasyFloat:1.1.2'
    implementation 'com.kongzue.dialog:dialog:2.5.2'
    implementation 'anylife.scrolltextview:ScrollTextviewLib:1.4.6'
    implementation 'com.dalong:marqueeview:1.0.1'
    api 'com.tencent.bugly:crashreport:3.1.0'
    implementation 'com.hacknife:onpermission:1.1.3'
    implementation 'cn.jiguang.sdk:jpush:3.5.4'  // 此处以JPush 3.5.4 版本为例。
    implementation 'cn.jiguang.sdk:jcore:2.2.4'
    implementation project(path: ':tuikit')
}
